<rml>
<head>
    <link type="text/template" href="window.rml" />
    <style>
        div#window_content
        {
            width: 80%;
            height: 80%;

            margin:auto;
        }
    </style>
    <script>
        UIBrightness = {};

        function UIBrightness.UpdateGamma(document)
            local elem = Element.As.ElementFormControlInput(document:GetElementById("brightness_gamma"));
            local gamma = tonumber(elem.value);
            local c = math.pow(0.03, 1.0 / gamma) * 255;
            document:GetElementById("brightness_square").style["background-color"] = "rgb("..c..", "..c..", "..c..")";
            settings:setGamma(gamma);
        end

        function UIBrightness.OnLoad(document)
            UIWindow.TransitionIn(document);

            local elem = Element.As.ElementFormControlInput(document:GetElementById("brightness_gamma"));

            elem.value = settings.gamma;

            UIBrightness.UpdateGamma(document);
        end
    </script>
</head>
<body template="window" onload="UIBrightness.OnLoad(document);">
    [BRIGHTNESS_TITLE]
    <div id="brightness_options">
        <p>[BRIGHTNESS_ABOUT]</p>
        <div id="brightness_bg">
            <div id="brightness_square"></div>
        </div>
        <input type="range" min="0.5" max="1.5" step="0.01" id="brightness_gamma" onchange="UIBrightness.UpdateGamma(document);" />
    </div>
    <button class="brightness_back_button" onclick="UIWindow.TransitionBack(document);">[BACK]</button>
</body>
</rml>
