// world
addCustomProperty("world", "rootBody", "rootBody", "string");
// body
addCustomProperty("body", "class", "class", "string");
insertCustomPropertyComboboxEntry("body", "class", "terrain");
insertCustomPropertyComboboxEntry("body", "class", "player");
insertCustomPropertyComboboxEntry("body", "class", "rock");
insertCustomPropertyComboboxEntry("body", "class", "dummy");
insertCustomPropertyComboboxEntry("body", "class", "shroom_cannon_red1");
insertCustomPropertyComboboxEntry("body", "class", "sensor");
insertCustomPropertyComboboxEntry("body", "class", "shroom_guardian_red1");
insertCustomPropertyComboboxEntry("body", "class", "shroom_guardian_red2");
insertCustomPropertyComboboxEntry("body", "class", "blocker");
insertCustomPropertyComboboxEntry("body", "class", "blocker2");
insertCustomPropertyComboboxEntry("body", "class", "jake");
insertCustomPropertyComboboxEntry("body", "class", "hermite_path");
insertCustomPropertyComboboxEntry("body", "class", "shroom_snake");
insertCustomPropertyComboboxEntry("body", "class", "tetrobot");
insertCustomPropertyComboboxEntry("body", "class", "tetrobot2");
insertCustomPropertyComboboxEntry("body", "class", "tetrocrab");
insertCustomPropertyComboboxEntry("body", "class", "spawner1");
insertCustomPropertyComboboxEntry("body", "class", "teleport1");
insertCustomPropertyComboboxEntry("body", "class", "goal_area");
insertCustomPropertyComboboxEntry("body", "class", "hint_area");
insertCustomPropertyComboboxEntry("body", "class", "weapon_station");
insertCustomPropertyComboboxEntry("body", "class", "scorp");
insertCustomPropertyComboboxEntry("body", "class", "barrel1");
insertCustomPropertyComboboxEntry("body", "class", "barrel2");
insertCustomPropertyComboboxEntry("body", "class", "turret1");
insertCustomPropertyComboboxEntry("body", "class", "pyrobot");
insertCustomPropertyComboboxEntry("body", "class", "keyl");
insertCustomPropertyComboboxEntry("body", "class", "laser_blocker");
insertCustomPropertyComboboxEntry("body", "class", "powerup_inventory");
insertCustomPropertyComboboxEntry("body", "class", "placeholder");
insertCustomPropertyComboboxEntry("body", "class", "rock_placeholder");
insertCustomPropertyComboboxEntry("body", "class", "vehicle_placeholder");
insertCustomPropertyComboboxEntry("body", "class", "ally_placeholder");
insertCustomPropertyComboboxEntry("body", "class", "boss_skull");
insertCustomPropertyComboboxEntry("body", "class", "spider");
insertCustomPropertyComboboxEntry("body", "class", "instance");
insertCustomPropertyComboboxEntry("body", "class", "powerup_helmet");
insertCustomPropertyComboboxEntry("body", "class", "baby_spider1");
insertCustomPropertyComboboxEntry("body", "class", "baby_spider2");
insertCustomPropertyComboboxEntry("body", "class", "spider_nest");
insertCustomPropertyComboboxEntry("body", "class", "weapon_trap");
insertCustomPropertyComboboxEntry("body", "class", "boss_queen");
insertCustomPropertyComboboxEntry("body", "class", "enforcer1");
insertCustomPropertyComboboxEntry("body", "class", "enforcer2");
insertCustomPropertyComboboxEntry("body", "class", "enforcer3");
insertCustomPropertyComboboxEntry("body", "class", "sentry1");
insertCustomPropertyComboboxEntry("body", "class", "sentry2");
insertCustomPropertyComboboxEntry("body", "class", "gorger1");
insertCustomPropertyComboboxEntry("body", "class", "powerup_ammo");
insertCustomPropertyComboboxEntry("body", "class", "roboarm");
insertCustomPropertyComboboxEntry("body", "class", "crate1");
insertCustomPropertyComboboxEntry("body", "class", "crate2");
insertCustomPropertyComboboxEntry("body", "class", "crate3");
insertCustomPropertyComboboxEntry("body", "class", "crate4");
insertCustomPropertyComboboxEntry("body", "class", "powerup_weapon");
insertCustomPropertyComboboxEntry("body", "class", "orbo");
insertCustomPropertyComboboxEntry("body", "class", "warder");
insertCustomPropertyComboboxEntry("body", "class", "keeper");
insertCustomPropertyComboboxEntry("body", "class", "powerup_backpack");
insertCustomPropertyComboboxEntry("body", "class", "powerup_earpiece");
insertCustomPropertyComboboxEntry("body", "class", "health_station");
insertCustomPropertyComboboxEntry("body", "class", "rod_bundle");
insertCustomPropertyComboboxEntry("body", "class", "garbage");
insertCustomPropertyComboboxEntry("body", "class", "boss_coreprotector");
insertCustomPropertyComboboxEntry("body", "class", "barrel3");
insertCustomPropertyComboboxEntry("body", "class", "acidworm1");
insertCustomPropertyComboboxEntry("body", "class", "centipede1");
insertCustomPropertyComboboxEntry("body", "class", "beetle1");
insertCustomPropertyComboboxEntry("body", "class", "beetle2");
insertCustomPropertyComboboxEntry("body", "class", "boat");
insertCustomPropertyComboboxEntry("body", "class", "powergen");
insertCustomPropertyComboboxEntry("body", "class", "powergen2");
insertCustomPropertyComboboxEntry("body", "class", "boss_squid");
insertCustomPropertyComboboxEntry("body", "class", "mech");
insertCustomPropertyComboboxEntry("body", "class", "homer");
insertCustomPropertyComboboxEntry("body", "class", "scientist");
insertCustomPropertyComboboxEntry("body", "class", "boss_chopper");
insertCustomPropertyComboboxEntry("body", "class", "creature");
insertCustomPropertyComboboxEntry("body", "class", "octopus");
insertCustomPropertyComboboxEntry("body", "class", "walker");
insertCustomPropertyComboboxEntry("body", "class", "snake");
insertCustomPropertyComboboxEntry("body", "class", "boss_buddy");
insertCustomPropertyComboboxEntry("body", "class", "boss_natan");
insertCustomPropertyComboboxEntry("body", "class", "guardian");
insertCustomPropertyComboboxEntry("body", "class", "guardian2");
insertCustomPropertyComboboxEntry("body", "class", "military1");
insertCustomPropertyComboboxEntry("body", "class", "sarge1");
insertCustomPropertyComboboxEntry("body", "class", "enemy_building");
insertCustomPropertyComboboxEntry("body", "class", "sawer");
insertCustomPropertyComboboxEntry("body", "class", "boss_beholder");
addCustomProperty("body", "gravityGunAware", "gravityGunAware", "bool");
addCustomProperty("body", "visible", "visible", "bool");
addCustomProperty("body", "freezable", "freezable", "bool");
addCustomProperty("body", "freezeRadius", "freezeRadius", "float");
addCustomProperty("body", "freezePhysics", "freezePhysics", "bool");
addCustomProperty("body", "detourable", "detourable", "bool");
addCustomProperty("body", "weaponType", "weaponType", "string");
insertCustomPropertyComboboxEntry("body", "weaponType", "gravityGun");
insertCustomPropertyComboboxEntry("body", "weaponType", "blaster");
insertCustomPropertyComboboxEntry("body", "weaponType", "shotgun");
insertCustomPropertyComboboxEntry("body", "weaponType", "rlauncher");
insertCustomPropertyComboboxEntry("body", "weaponType", "fireball");
insertCustomPropertyComboboxEntry("body", "weaponType", "flamethrower");
insertCustomPropertyComboboxEntry("body", "weaponType", "pistol");
insertCustomPropertyComboboxEntry("body", "weaponType", "superBlaster");
insertCustomPropertyComboboxEntry("body", "weaponType", "proxmine");
insertCustomPropertyComboboxEntry("body", "weaponType", "chainsaw");
insertCustomPropertyComboboxEntry("body", "weaponType", "lgun");
insertCustomPropertyComboboxEntry("body", "weaponType", "machineGun");
insertCustomPropertyComboboxEntry("body", "weaponType", "plasmagun");
insertCustomPropertyComboboxEntry("body", "weaponType", "superShotgun");
insertCustomPropertyComboboxEntry("body", "weaponType", "eshield");
addCustomProperty("body", "autoTarget", "autoTarget", "bool");
addCustomProperty("body", "width", "width", "float");
addCustomProperty("body", "length", "length", "float");
addCustomProperty("body", "zorder", "zorder", "int");
addCustomProperty("body", "inventoryItem", "inventoryItem", "string");
insertCustomPropertyComboboxEntry("body", "inventoryItem", "dynomite");
insertCustomPropertyComboboxEntry("body", "inventoryItem", "redKey");
insertCustomPropertyComboboxEntry("body", "inventoryItem", "blueKey");
insertCustomPropertyComboboxEntry("body", "inventoryItem", "yellowKey");
addCustomProperty("body", "height", "height", "float");
addCustomProperty("body", "radius", "radius", "float");
addCustomProperty("body", "num_sectors", "num_sectors", "int");
addCustomProperty("body", "image_zorder", "image_zorder", "int");
addCustomProperty("body", "circle_zorder", "circle_zorder", "int");
addCustomProperty("body", "glassy", "glassy", "bool");
addCustomProperty("body", "assetPath", "assetPath", "string");
addCustomProperty("body", "image", "image", "string");
addCustomProperty("body", "probability1", "probability1", "float");
addCustomProperty("body", "missileType", "missileType", "string");
insertCustomPropertyComboboxEntry("body", "missileType", "player_missile");
insertCustomPropertyComboboxEntry("body", "missileType", "enemy_missile");
insertCustomPropertyComboboxEntry("body", "missileType", "ally_missile");
insertCustomPropertyComboboxEntry("body", "missileType", "neutral_missile");
addCustomProperty("body", "image_flip", "image_flip", "bool");
addCustomProperty("body", "folded", "folded", "bool");
addCustomProperty("body", "foldable", "foldable", "bool");
addCustomProperty("body", "unfoldRadius", "unfoldRadius", "float");
addCustomProperty("body", "blockPlayer", "blockPlayer", "bool");
addCustomProperty("body", "blockAlly", "blockAlly", "bool");
addCustomProperty("body", "blockEnemy", "blockEnemy", "bool");
addCustomProperty("body", "blockRock", "blockRock", "bool");
addCustomProperty("body", "minAmmo", "minAmmo", "float");
addCustomProperty("body", "prob_health", "prob_health", "float");
addCustomProperty("body", "prob_gem", "prob_gem", "float");
addCustomProperty("body", "prob_ammo", "prob_ammo", "float");
addCustomProperty("body", "prob_ammo_proxmine", "prob_ammo_proxmine", "float");
addCustomProperty("body", "prob_ammo_rlauncher", "prob_ammo_rlauncher", "float");
addCustomProperty("body", "prob_ammo_machineGun", "prob_ammo_machineGun", "float");
addCustomProperty("body", "prob_ammo_plasmagun", "prob_ammo_plasmagun", "float");
addCustomProperty("body", "prob_ammo_shotgun", "prob_ammo_shotgun", "float");
addCustomProperty("body", "prob_ammo_eshield", "prob_ammo_eshield", "float");
addCustomProperty("body", "color", "color", "color");
addCustomProperty("body", "amount", "amount", "float");
addCustomProperty("body", "segId", "segId", "int");
addCustomProperty("body", "cancelCollisions", "cancelCollisions", "bool");
addCustomProperty("body", "collisionImpulseMultiplier", "collisionImpulseMultiplier", "float");
addCustomProperty("body", "shoot", "shoot", "bool");
addCustomProperty("body", "split", "split", "bool");
addCustomProperty("body", "rusted", "rusted", "bool");
addCustomProperty("body", "alpha", "alpha", "float");
addCustomProperty("body", "dead", "dead", "bool");
addCustomProperty("body", "i", "i", "int");
addCustomProperty("body", "fixed", "fixed", "bool");
// fixture
addCustomProperty("fixture", "stencilPass", "stencilPass", "string");
insertCustomPropertyComboboxEntry("fixture", "stencilPass", "keep");
insertCustomPropertyComboboxEntry("fixture", "stencilPass", "zero");
insertCustomPropertyComboboxEntry("fixture", "stencilPass", "replace");
insertCustomPropertyComboboxEntry("fixture", "stencilPass", "incr");
insertCustomPropertyComboboxEntry("fixture", "stencilPass", "decr");
addCustomProperty("fixture", "stencilFunc", "stencilFunc", "string");
insertCustomPropertyComboboxEntry("fixture", "stencilFunc", "less");
insertCustomPropertyComboboxEntry("fixture", "stencilFunc", "lequal");
insertCustomPropertyComboboxEntry("fixture", "stencilFunc", "greater");
insertCustomPropertyComboboxEntry("fixture", "stencilFunc", "gequal");
insertCustomPropertyComboboxEntry("fixture", "stencilFunc", "equal");
insertCustomPropertyComboboxEntry("fixture", "stencilFunc", "notequal");
addCustomProperty("fixture", "stencilFail", "stencilFail", "string");
insertCustomPropertyComboboxEntry("fixture", "stencilFail", "keep");
insertCustomPropertyComboboxEntry("fixture", "stencilFail", "zero");
insertCustomPropertyComboboxEntry("fixture", "stencilFail", "replace");
insertCustomPropertyComboboxEntry("fixture", "stencilFail", "incr");
insertCustomPropertyComboboxEntry("fixture", "stencilFail", "decr");
addCustomProperty("fixture", "image", "image", "string");
addCustomProperty("fixture", "first_polygon", "first_polygon", "string");
insertCustomPropertyComboboxEntry("fixture", "first_polygon", "left");
insertCustomPropertyComboboxEntry("fixture", "first_polygon", "right");
insertCustomPropertyComboboxEntry("fixture", "first_polygon", "top");
insertCustomPropertyComboboxEntry("fixture", "first_polygon", "bottom");
addCustomProperty("fixture", "first_point", "first_point", "string");
insertCustomPropertyComboboxEntry("fixture", "first_point", "left");
insertCustomPropertyComboboxEntry("fixture", "first_point", "right");
insertCustomPropertyComboboxEntry("fixture", "first_point", "top");
insertCustomPropertyComboboxEntry("fixture", "first_point", "bottom");
addCustomProperty("fixture", "class", "class", "string");
insertCustomPropertyComboboxEntry("fixture", "class", "terrain_hole");
insertCustomPropertyComboboxEntry("fixture", "class", "terrain_points");
insertCustomPropertyComboboxEntry("fixture", "class", "stripe");
insertCustomPropertyComboboxEntry("fixture", "class", "hermite_stripe");
insertCustomPropertyComboboxEntry("fixture", "class", "chain");
insertCustomPropertyComboboxEntry("fixture", "class", "polygon");
insertCustomPropertyComboboxEntry("fixture", "class", "line_stripe");
insertCustomPropertyComboboxEntry("fixture", "class", "proj");
insertCustomPropertyComboboxEntry("fixture", "class", "tentacle");
addCustomProperty("fixture", "base", "base", "string");
insertCustomPropertyComboboxEntry("fixture", "base", "left");
insertCustomPropertyComboboxEntry("fixture", "base", "right");
insertCustomPropertyComboboxEntry("fixture", "base", "top");
insertCustomPropertyComboboxEntry("fixture", "base", "bottom");
addCustomProperty("fixture", "zorder", "zorder", "int");
addCustomProperty("fixture", "stencilRef", "stencilRef", "int");
addCustomProperty("fixture", "num_sectors", "num_sectors", "int");
addCustomProperty("fixture", "tension", "tension", "float");
addCustomProperty("fixture", "step", "step", "float");
addCustomProperty("fixture", "image_width", "image_width", "float");
addCustomProperty("fixture", "image_height", "image_height", "float");
addCustomProperty("fixture", "height1", "height1", "float");
addCustomProperty("fixture", "height2", "height2", "float");
addCustomProperty("fixture", "angle1", "angle1", "float");
addCustomProperty("fixture", "angle2", "angle2", "float");
addCustomProperty("fixture", "stencilUse", "stencilUse", "bool");
addCustomProperty("fixture", "stencilSet", "stencilSet", "bool");
addCustomProperty("fixture", "color", "color", "color");
addCustomProperty("fixture", "huge", "huge", "bool");
addCustomProperty("fixture", "image_flip", "image_flip", "bool");
addCustomProperty("fixture", "image_visible", "image_visible", "bool");
addCustomProperty("fixture", "image_fixedPos", "image_fixedPos", "bool");
addCustomProperty("fixture", "width1", "width1", "float");
addCustomProperty("fixture", "width2", "width2", "float");
addCustomProperty("fixture", "num_iterations", "num_iterations", "int");
// image
addCustomProperty("image", "stencilPass", "stencilPass", "string");
insertCustomPropertyComboboxEntry("image", "stencilPass", "keep");
insertCustomPropertyComboboxEntry("image", "stencilPass", "zero");
insertCustomPropertyComboboxEntry("image", "stencilPass", "replace");
insertCustomPropertyComboboxEntry("image", "stencilPass", "incr");
insertCustomPropertyComboboxEntry("image", "stencilPass", "decr");
addCustomProperty("image", "stencilFunc", "stencilFunc", "string");
insertCustomPropertyComboboxEntry("image", "stencilFunc", "less");
insertCustomPropertyComboboxEntry("image", "stencilFunc", "lequal");
insertCustomPropertyComboboxEntry("image", "stencilFunc", "greater");
insertCustomPropertyComboboxEntry("image", "stencilFunc", "gequal");
insertCustomPropertyComboboxEntry("image", "stencilFunc", "equal");
insertCustomPropertyComboboxEntry("image", "stencilFunc", "notequal");
addCustomProperty("image", "stencilFail", "stencilFail", "string");
insertCustomPropertyComboboxEntry("image", "stencilFail", "keep");
insertCustomPropertyComboboxEntry("image", "stencilFail", "zero");
insertCustomPropertyComboboxEntry("image", "stencilFail", "replace");
insertCustomPropertyComboboxEntry("image", "stencilFail", "incr");
insertCustomPropertyComboboxEntry("image", "stencilFail", "decr");
addCustomProperty("image", "peffect", "peffect", "string");
addCustomProperty("image", "light", "light", "string");
insertCustomPropertyComboboxEntry("image", "light", "point");
insertCustomPropertyComboboxEntry("image", "light", "cone");
insertCustomPropertyComboboxEntry("image", "light", "line");
insertCustomPropertyComboboxEntry("image", "light", "ring");
addCustomProperty("image", "stencilRef", "stencilRef", "int");
addCustomProperty("image", "numRays", "numRays", "int");
addCustomProperty("image", "softLength", "softLength", "float");
addCustomProperty("image", "nearDistance", "nearDistance", "float");
addCustomProperty("image", "distance", "distance", "float");
addCustomProperty("image", "coneAngle", "coneAngle", "float");
addCustomProperty("image", "xray", "xray", "bool");
addCustomProperty("image", "visible", "visible", "bool");
addCustomProperty("image", "stencilUse", "stencilUse", "bool");
addCustomProperty("image", "stencilSet", "stencilSet", "bool");
addCustomProperty("image", "mask", "mask", "bool");
addCustomProperty("image", "dynamic", "dynamic", "bool");
addCustomProperty("image", "diffuse", "diffuse", "bool");
addCustomProperty("image", "reverse", "reverse", "bool");
addCustomProperty("image", "intensity", "intensity", "float");
addCustomProperty("image", "fixedPos", "fixedPos", "bool");
addCustomProperty("image", "bothWays", "bothWays", "bool");
addCustomProperty("image", "length", "length", "float");
addCustomProperty("image", "dummy", "dummy", "bool");
addCustomProperty("image", "nearOffset", "nearOffset", "float");
addCustomProperty("image", "farDistance", "farDistance", "float");
addCustomProperty("image", "hitBlockers", "hitBlockers", "bool");
